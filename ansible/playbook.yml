---
- name: Setup Kubernetes Environment
  hosts: all
  become: yes

  tasks:
    - name: Disable and turn off SWAP
      shell: |
        sed -i '/swap/d' /etc/fstab
        swapoff -a
      args:
        warn: false

    - name: Stop and Disable firewall
      systemd:
        name: ufw
        enabled: no
        state: stopped

    - name: Enable and Load Kernel modules
      block:
        - name: Configure kernel modules
          copy:
            dest: /etc/modules-load.d/containerd.conf
            content: |
              overlay
              br_netfilter
        - name: Load kernel modules
          modprobe:
            name: "{{ item }}"
          with_items:
            - overlay
            - br_netfilter

    - name: Add Kernel settings
      block:
        - name: Configure kernel settings
          copy:
            dest: /etc/sysctl.d/kubernetes.conf
            content: |
              net.bridge.bridge-nf-call-ip6tables = 1
              net.bridge.bridge-nf-call-iptables  = 1
              net.ipv4.ip_forward                 = 1
        - name: Apply sysctl settings
          command: sysctl --system
          register: sysctl_output
          changed_when: "'changed' in sysctl_output.stdout"

    - name: Install containerd runtime
      block:
        - name: Update apt cache
          apt:
            update_cache: yes
        - name: Install dependencies
          apt:
            name:
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg
              - lsb-release
            state: present
        - name: Add Dockerâ€™s official GPG key
          command: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        - name: Set up Docker repository
          copy:
            dest: /etc/apt/sources.list.d/docker.list
            content: |
              deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        - name: Update apt cache again
          apt:
            update_cache: yes
        - name: Install containerd
          apt:
            name: containerd.io
            state: present
        - name: Configure containerd
          shell: |
            containerd config default > /etc/containerd/config.toml
            sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
        - name: Restart and enable containerd
          systemd:
            name: containerd
            state: restarted
            enabled: yes

    - name: Set up kubernetes repo
      block:
        - name: Add Kubernetes GPG key
          command: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        - name: Add Kubernetes repository
          copy:
            dest: /etc/apt/sources.list.d/kubernetes.list
            content: |
              deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /

    - name: Install Kubernetes components (kubeadm, kubelet and kubectl)
      block:
        - name: Update apt cache
          apt:
            update_cache: yes
        - name: Install Kubernetes packages
          apt:
            name:
              - kubeadm
              - kubelet
              - kubectl
            state: present

    - name: Enable ssh password authentication
      block:
        - name: Update SSH configuration to enable password authentication
          lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^PasswordAuthentication '
            line: 'PasswordAuthentication yes'
            state: present
        - name: Permit root login
          lineinfile:
            path: /etc/ssh/sshd_config
            line: 'PermitRootLogin yes'
            state: present
        - name: Reload SSH service
          systemd:
            name: sshd
            state: reloaded

    - name: Set root password
      user:
        name: root
        password: "{{ 'kubeadmin' | password_hash('sha512') }}"
      environment:
        TERM: xterm

    - name: Update /etc/hosts file
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        state: present
      with_items:
        - "172.16.16.100   kmaster.example.com     kmaster"
        - "172.16.16.101   kworker1.example.com    kworker1"
        - "172.16.16.102   kworker2.example.com    kworker2"
